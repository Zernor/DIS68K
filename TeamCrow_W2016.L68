00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2/23/2016 10:20:51 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  68K Disassembler
00000000                             3  * Written by :  Hoa, Tenzin Khando, Marco F.
00000000                             4  * Date       :
00000000                             5  * Description:  Awesome 68k disassembler 
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  * Global Variables -----------------------------------------
00000000  =00007000                  9  startLoc    EQU     $7000
00000000  =00000FFE                 10  stack       EQU     $0FFE       * stack pointer (SP)
00000000                            11  
00000000                            12  * Hex values -----------------------------------------------  
00000000  =00000000                 13  numzero     EQU     0  
00000000  =00000001                 14  numone      EQU     1
00000000  =00000002                 15  numtwo      EQU     2
00000000  =00000003                 16  numthree    EQU     3
00000000  =00000004                 17  numfour     EQU     4
00000000  =00000005                 18  numfive     EQU     5
00000000  =00000006                 19  numsix      EQU     6
00000000  =00000007                 20  numseven    EQU     7
00000000  =00000008                 21  numeight    EQU     8
00000000  =00000009                 22  numnine     EQU     9
00000000  =0000000A                 23  numA        EQU     10
00000000  =0000000B                 24  numB        EQU     11
00000000  =0000000C                 25  numC        EQU     12
00000000  =0000000D                 26  numD        EQU     13
00000000  =0000000E                 27  numE        EQU     $E
00000000  =0000000F                 28  numF        EQU     15
00000000                            29  
00000000                            30  * Binary Hex Values ----------------------------------------
00000000  =00000000                 31  hex0        EQU     %0000   
00000000  =00000001                 32  hex1        EQU     %0001   
00000000  =00000002                 33  hex2        EQU     %0010   
00000000  =00000003                 34  hex3        EQU     %0011   
00000000  =00000004                 35  hex4        EQU     %0100   
00000000  =00000005                 36  hex5        EQU     %0101   
00000000  =00000006                 37  hex6        EQU     %0110   
00000000  =00000007                 38  hex7        EQU     %0111   
00000000  =00000008                 39  hex8        EQU     %1000   
00000000  =00000009                 40  hex9        EQU     %1001   
00000000  =0000000A                 41  hexA        EQU     %1010   
00000000  =0000000B                 42  hexB        EQU     %1011   
00000000  =0000000C                 43  hexC        EQU     %1100   
00000000  =0000000D                 44  hexD        EQU     %1101   
00000000  =0000000E                 45  hexE        EQU     %1110   
00000000  =0000000F                 46  hexF        EQU     %1111   
00000000                            47  
00000000                            48  * OP Codes -------------------------------------------------
00000000  =00000000                 49  bin0000     EQU     %0000   ;ADDI, ANDI, EORI, BCHG, CMPI
00000000  =00000001                 50  bin0001     EQU     %0001   ;MOVE.B
00000000  =00000002                 51  bin0010     EQU     %0010   ;MOVE.L
00000000  =00000003                 52  bin0011     EQU     %0011   ;MOVE.W
00000000  =00000004                 53  bin0100     EQU     %0100   ;MOVEM, MULS.L, DIVU.L, LEA, CLR, JSR, RTS
00000000  =00000005                 54  bin0101     EQU     %0101   ;SUBQ
00000000  =00000006                 55  bin0110     EQU     %0110   ;Bcc
00000000  =00000007                 56  bin0111     EQU     %0111   ;MOVEQ
00000000  =00000008                 57  bin1000     EQU     %1000   ;DIVU.W
00000000  =00000009                 58  bin1001     EQU     %1001   ;SUB, SUBA
00000000  =0000000B                 59  bin1011     EQU     %1011   ;CMP, CMPA, EOR
00000000  =0000000C                 60  bin1100     EQU     %1100   ;AND, MULS.W
00000000  =0000000D                 61  bin1101     EQU     %1101   ;ADD, ADDA
00000000  =0000000E                 62  bin1110     EQU     %1110   ;ASR, ASL, ROL, ROR
00000000                            63  
00000000                            64  
00000000  =0000000D                 65  CR        EQU       $0D
00000000  =0000000A                 66  LF        EQU       $0A
00000000                            67  
00000400                            68      ORG    $400
00000400                            69  START:                 
00000400                            70  
00000400                            71  * Put program code here
00000400  43F9 00000454             72  MESSAGE     LEA         GREETING, A1   ;load the greeting message
00000406  103C 000E                 73              MOVE.B      #14,D0
0000040A  4E4F                      74              TRAP        #15 
0000040C                            75  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0000040C                            76  ;;;;;;;;;;;;ask the user for starting address;;;;;;;;;;;;;;;;;
0000040C                            77  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0000040C  43F9 00000485             78              LEA         PROMPT,A1      *load the message asked for starting address
00000412  103C 000E                 79              MOVE.B      #14,D0       
00000416  4E4F                      80              TRAP        #15          
00000418  103C 0002                 81  LOOP        MOVE.B      #2, D0          *Task 4: read a number from keyborad into D1
0000041C  4E4F                      82              TRAP        #15
0000041E  B27C 0FA0                 83              CMP.W       #4000,D1        *comapare number in D1 to 4000, if the value entered is 4000
00000422  6D00 000C                 84              BLT         ERROR1          //NL: nelse display WRONG1 
00000426  6E00 0016                 85              BGT         PROMPT2         // NL: display PROMPT3
0000042A  103C 0004                 86              MOVE.B      #4,D0           //NL store starting address at D1
0000042E  4E4F                      87              TRAP        #15
00000430                            88              
00000430  43F9 000004EA             89  ERROR1      LEA        WRONG1,A1
00000436  103C 000E                 90              MOVE.B      #14,D0
0000043A  4E4F                      91              TRAP        #15       
0000043C  60DA                      92              BRA         LOOP            // NEW LINE 
0000043E                            93  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0000043E                            94  ;;;;;;;;;;;;;ask the user for ending address;;;;;;;;;;;;;;;;;;;;;
0000043E                            95  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0000043E  43F9 000004C6             96  PROMPT2     LEA        PROMPT3, A1
00000444  103C 000E                 97              MOVE.B     #14,D0          
00000448  4E4F                      98              TRAP       #15
0000044A  103C 0004                 99              MOVE.B     #4,D0            //Store ending address at A1
0000044E  4E4F                     100              TRAP       #15
00000450                           101                 
00000450                           102      
00000450  FFFF FFFF                103      SIMHALT             ; halt simulator
00000454                           104  
00000454                           105  * Put variables and constants here
00000454= 48 45 4C 4C 4F 20 ...    106  GREETING        DC.B    'HELLO THERE, WELCOME TO AWESOME DISASSEMBLER',CR,LF,CR,LF,0 
00000485= 50 4C 45 41 53 45 ...    107  PROMPT          DC.B    'PLEASE ENTER THE STARTING ADDRESS, MUST BE GREATER THAN 4000: ',0,CR,LF
000004C6= 50 4C 45 41 53 45 ...    108  PROMPT3         DC.B    'PLEASE ENTER THE ENDING ADDRESS: ',CR,LF,0
000004EA= 59 4F 55 52 20 53 ...    109  WRONG1          DC.B   'YOUR STARTING ADDRESS MUST BE GREATER THAN 4000:',0 //NEW CHANGE   
0000051B                           110   END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BIN0000             0
BIN0001             1
BIN0010             2
BIN0011             3
BIN0100             4
BIN0101             5
BIN0110             6
BIN0111             7
BIN1000             8
BIN1001             9
BIN1011             B
BIN1100             C
BIN1101             D
BIN1110             E
CR                  D
ERROR1              430
GREETING            454
HEX0                0
HEX1                1
HEX2                2
HEX3                3
HEX4                4
HEX5                5
HEX6                6
HEX7                7
HEX8                8
HEX9                9
HEXA                A
HEXB                B
HEXC                C
HEXD                D
HEXE                E
HEXF                F
LF                  A
LOOP                418
MESSAGE             400
NUMA                A
NUMB                B
NUMC                C
NUMD                D
NUME                E
NUMEIGHT            8
NUMF                F
NUMFIVE             5
NUMFOUR             4
NUMNINE             9
NUMONE              1
NUMSEVEN            7
NUMSIX              6
NUMTHREE            3
NUMTWO              2
NUMZERO             0
PROMPT              485
PROMPT2             43E
PROMPT3             4C6
STACK               FFE
START               400
STARTLOC            7000
WRONG1              4EA
