00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/2/2016 7:21:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  68K Disassembler
00000000                             3  * Written by :  Hoa, Tenzin Khando, Marco F.
00000000                             4  * Date       :
00000000                             5  * Description:  Awesome 68k disassembler 
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR        EQU       $0D
00000000  =0000000A                  8  LF        EQU       $0A
00000000                             9  
00000400                            10      ORG    $400
00000400                            11  START:  
00000400                            12                 
00000400  43F9 00000530             13  WECOMEM     LEA         GREETING, A1    *load the greeting message
00000406  103C 000E                 14              MOVE.B      #14,D0
0000040A  4E4F                      15              TRAP        #15 
0000040C                            16              
0000040C                            17  * Put program code here
0000040C                            18  READ_SADDR
0000040C  43F9 00000562             19          LEA         PROMPTSADDR, A1
00000412  103C 000E                 20          MOVE.B      #14, D0
00000416  4E4F                      21          TRAP        #15
00000418  227C 00000000             22          MOVE.L      #$0,A1             ; clear after printing message
0000041E  103C 0002                 23          MOVE.B      #2,D0              * Read string from keyboard and store at A1
00000422  4E4F                      24          TRAP        #15
00000424  6000 0042                 25          BRA         VALIDATE_STORE 
00000428                            26  BADSIZES
00000428  43F9 00000628             27          LEA         ERRORINPUTSIZE, A1
0000042E  103C 000E                 28          MOVE.B      #14,D0
00000432  4E4F                      29          TRAP        #15
00000434  B63C 0000                 30          CMP.B       #0,D3
00000438  67D2                      31          BEQ         READ_SADDR
0000043A  6000 0014                 32          BRA         READ_EADDR 
0000043E                            33  
0000043E                            34  INVALID_CHARACTER
0000043E  43F9 00000628             35          LEA         ERRORINPUTSIZE, A1
00000444  103C 000E                 36          MOVE.B      #14,D0 
00000448  4E4F                      37          TRAP        #15 
0000044A  B63C 0000                 38          CMP.B       #0,D3
0000044E  67BC                      39          BEQ         READ_SADDR 
00000450                            40          
00000450                            41  READ_EADDR
00000450  43F9 000005F4             42          LEA         PROMPTEADDR, A1
00000456  103C 000E                 43          MOVE.B      #14, D0
0000045A  4E4F                      44          TRAP        #15
0000045C                            45          
0000045C  227C 00000000             46          MOVE.L      #$0,A1             ; clear after printing message
00000462  103C 0002                 47          MOVE.B      #2,D0              * Read string from keyboard and store at A1
00000466  4E4F                      48          TRAP        #15  
00000468                            49          
00000468                            50  VALIDATE_STORE 
00000468  0C01 0004                 51          CMPI.B      #4, D1             * Check address size
0000046C  6DBA                      52          BLT         BADSIZES 
0000046E  0C01 0008                 53          CMPI.B      #8, D1 
00000472  6EB4                      54          BGT         BADSIZES
00000474                            55          
00000474                            56  READHEX       
00000474  0C11 0030                 57          CMPI.B      #$30,(A1)
00000478  6DC4                      58          BLT         INVALID_CHARACTER   * Wrong data
0000047A  0C11 0040                 59          CMPI.B      #$40,(A1)
0000047E  6D00 000C                 60          BLT         NUMBER              * Is number
00000482  0C11 0046                 61          CMPI.B      #$46,(A1)
00000486  6D00 000C                 62          BLT         LETTERS             * Is Letter
0000048A  60B2                      63          BRA         INVALID_CHARACTER
0000048C  0411 0030                 64  NUMBER      SUBI.B      #$30,(A1)           * Convert Numbers to Hex
00000490  6000 000A                 65          BRA         STORE   
00000494  0411 0037                 66  LETTERS     SUBI.B      #$37,(A1)           * Convert Numbers to Hex
00000498  6000 0002                 67           BRA         STORE
0000049C  DE19                      68  STORE       ADD.B       (A1)+,D7            * Save data from A1 to D7
0000049E  0C11 0000                 69          CMPI.B      #0,(A1) 
000004A2  6700 0006                 70          BEQ         STOREME     
000004A6  E98F                      71          LSL.L       #4,D7               * Keep reading next character
000004A8  60CA                      72          BRA         READHEX
000004AA                            73  STOREME     
000004AA  B63C 0000                 74          CMP.B       #0,D3
000004AE  6600 0012                 75          BNE         STORE_ENDING
000004B2  23C7 00000674             76          MOVE.L      D7, STARTING_ADD      * Save in the memory address 
000004B8  2C47                      77          MOVEA.L     D7, A6      * Save in the memory address 
000004BA  163C 0001                 78          MOVE.B      #1, D3               * Counter - for VALID_STORE
000004BE  4287                      79          CLR.L       D7
000004C0  608E                      80          BRA         READ_EADDR    
000004C2                            81          
000004C2                            82  STORE_ENDING 
000004C2  BEB9 00000674             83          CMP.L       (STARTING_ADD), D7
000004C8  6D00 0012                 84          BLT         SGTE
000004CC  23C7 00000678             85          MOVE.L      D7, ENDING_ADD
000004D2  2C47                      86          MOVE.L      D7, A6
000004D4  4287                      87          CLR.L       D7
000004D6  4283                      88          CLR.L       D3
000004D8  6000 0016                 89          BRA         OPCODEDIS  
000004DC                            90          
000004DC                            91  SGTE    ;starting greater then ending
000004DC  43F9 000005A6             92          LEA         INVALIDSADDR, A1
000004E2  103C 000E                 93          MOVE.B      #14, D0
000004E6  4E4F                      94          TRAP        #15
000004E8  4287                      95          CLR.L       D7
000004EA  4283                      96          CLR.L       D3
000004EC  6000 FF1E                 97          BRA         READ_SADDR
000004F0                            98  
000004F0                            99  *-----------------------------Addressess------------------------------*  
000004F0                           100  
000004F0                           101           
000004F0                           102  
000004F0                           103  OPCODEDIS   ;fix the print of address
000004F0  143C 0010                104          MOVE.B  #16, D2
000004F4  3E79 00000678            105          MOVE.W  ENDING_ADD,   A7
000004FA  3217                     106          MOVE.W  (A7),   D1
000004FC  103C 000F                107          MOVE.B  #15, D0
00000500  4E4F                     108          TRAP    #15
00000502  323C 0674                109          MOVE.W  #STARTING_ADD, D1
00000506  103C 000F                110          MOVE.B  #15, D0
0000050A  4E4F                     111          TRAP    #15
0000050C  7001                     112          MOVE.L  #1, D0
0000050E  7404                     113          MOVE.L  #4, D2
00000510                           114  OPCODELOOP 
00000510  B400                     115          CMP.B   D0, D2
00000512  6700 0018                116          BEQ     OPCODEDONE
00000516  E38B                     117          LSL.L   #1, D3
00000518  6500 000C                118          BCS     ADDONE
0000051C  0604 0000                119          ADDI.B  #%0, D4                 * Add 0 bit to d2
00000520  E384                     120           ASL.L   #1, D4
00000522  5280                     121           ADDQ.L  #1,D0
00000524  60EA                     122           BRA     OPCODELOOP 
00000526                           123  ADDONE      
00000526  5204                     124          ADDI.B  #%1, D4                 * Add 1 bit to d2
00000528  5280                     125          ADDQ.L  #1,D0
0000052A  60E4                     126          BRA     OPCODELOOP
0000052C                           127  OPCODEDONE            
0000052C                           128  
0000052C  FFFF FFFF                129          SIMHALT             ; halt simulator
00000530                           130  
00000530                           131  * Put variables and constants here
00000530                           132  
00000530                           133  * Hex values -----------------------------------------------  
00000530  =00000000                134  numzero     EQU     0  
00000530  =00000001                135  numone      EQU     1
00000530  =00000002                136  numtwo      EQU     2
00000530  =00000003                137  numthree    EQU     3
00000530  =00000004                138  numfour     EQU     4
00000530  =00000005                139  numfive     EQU     5
00000530  =00000006                140  numsix      EQU     6
00000530  =00000007                141  numseven    EQU     7
00000530  =00000008                142  numeight    EQU     8
00000530  =00000009                143  numnine     EQU     9
00000530  =0000000A                144  numA        EQU     10
00000530  =0000000B                145  numB        EQU     11
00000530  =0000000C                146  numC        EQU     12
00000530  =0000000D                147  numD        EQU     13
00000530  =0000000E                148  numE        EQU     $E
00000530  =0000000F                149  numF        EQU     15
00000530                           150  
00000530                           151  * Binary Hex Values ----------------------------------------
00000530  =00000000                152  hex0        EQU     %0000   
00000530  =00000001                153  hex1        EQU     %0001   
00000530  =00000002                154  hex2        EQU     %0010   
00000530  =00000003                155  hex3        EQU     %0011   
00000530  =00000004                156  hex4        EQU     %0100   
00000530  =00000005                157  hex5        EQU     %0101   
00000530  =00000006                158  hex6        EQU     %0110   
00000530  =00000007                159  hex7        EQU     %0111   
00000530  =00000008                160  hex8        EQU     %1000   
00000530  =00000009                161  hex9        EQU     %1001   
00000530  =0000000A                162  hexA        EQU     %1010   
00000530  =0000000B                163  hexB        EQU     %1011   
00000530  =0000000C                164  hexC        EQU     %1100   
00000530  =0000000D                165  hexD        EQU     %1101   
00000530  =0000000E                166  hexE        EQU     %1110   
00000530  =0000000F                167  hexF        EQU     %1111   
00000530                           168  
00000530                           169  * OP Codes -------------------------------------------------
00000530  =00000000                170  bin0000     EQU     %0000   ;ADDI, ANDI, EORI, BCHG, CMPI
00000530  =00000001                171  bin0001     EQU     %0001   ;MOVE.B
00000530  =00000002                172  bin0010     EQU     %0010   ;MOVE.L
00000530  =00000003                173  bin0011     EQU     %0011   ;MOVE.W
00000530  =00000004                174  bin0100     EQU     %0100   ;MOVEM, MULS.L, DIVU.L, LEA, CLR, JSR, RTS
00000530  =00000005                175  bin0101     EQU     %0101   ;SUBQ
00000530  =00000006                176  bin0110     EQU     %0110   ;Bcc
00000530  =00000007                177  bin0111     EQU     %0111   ;MOVEQ
00000530  =00000008                178  bin1000     EQU     %1000   ;DIVU.W
00000530  =00000009                179  bin1001     EQU     %1001   ;SUB, SUBA
00000530  =0000000B                180  bin1011     EQU     %1011   ;CMP, CMPA, EOR
00000530  =0000000C                181  bin1100     EQU     %1100   ;AND, MULS.W
00000530  =0000000D                182  bin1101     EQU     %1101   ;ADD, ADDA
00000530  =0000000E                183  bin1110     EQU     %1110   ;ASR, ASL, ROL, ROR
00000530                           184  
00000530= 48 45 4C 4C 4F 20 ...    185  GREETING        DC.B    'HELLO THERE, WELCOME TO AWESOME DISASSEMBLER',CR,LF,CR,LF,0 
00000562= 504C 4541 5345 2...      186  PROMPTSADDR     DC.W    'PLEASE ENTER THE STARTING ADDRESS MUST BE GREATER THAN 7000: ',0,CR,LF
000005A6= 49 4E 56 41 4C 49 ...    187  INVALIDSADDR    DC.B    'INVALID STARTING ADDRESS VERSUS ENDING.',CR,LF,0
000005D0= 50 4C 45 41 53 45 ...    188  PROMPT3         DC.B    'PLEASE ENTER THE ENDING ADDRESS: ',CR,LF,0
000005F4= 504C 4541 5345 2...      189  PROMPTEADDR     DC.W    'PLEASE ENTER THE ENDING ADDRESS AND ALL CAPITALS: ',0
00000628= 45 52 52 4F 52 3A ...    190  ERRORINPUTSIZE  DC.B    'ERROR: INVALID ADDRESS SIZE',CR,LF,CR,LF,0
00000648= 45 52 52 4F 52 3A ...    191  SGTEM           DC.B    'ERROR: STARTING ADDRESS > ENDING ADDRESS',CR,LF,0
00000673                           192  
00000674                           193  STARTING_ADD    DS.L    1
00000678                           194  ENDING_ADD      DS.L    1
0000067C                           195  
0000067C                           196  
0000067C                           197   END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDONE              526
BADSIZES            428
BIN0000             0
BIN0001             1
BIN0010             2
BIN0011             3
BIN0100             4
BIN0101             5
BIN0110             6
BIN0111             7
BIN1000             8
BIN1001             9
BIN1011             B
BIN1100             C
BIN1101             D
BIN1110             E
CR                  D
ENDING_ADD          678
ERRORINPUTSIZE      628
GREETING            530
HEX0                0
HEX1                1
HEX2                2
HEX3                3
HEX4                4
HEX5                5
HEX6                6
HEX7                7
HEX8                8
HEX9                9
HEXA                A
HEXB                B
HEXC                C
HEXD                D
HEXE                E
HEXF                F
INVALIDSADDR        5A6
INVALID_CHARACTER   43E
LETTERS             494
LF                  A
NUMA                A
NUMB                B
NUMBER              48C
NUMC                C
NUMD                D
NUME                E
NUMEIGHT            8
NUMF                F
NUMFIVE             5
NUMFOUR             4
NUMNINE             9
NUMONE              1
NUMSEVEN            7
NUMSIX              6
NUMTHREE            3
NUMTWO              2
NUMZERO             0
OPCODEDIS           4F0
OPCODEDONE          52C
OPCODELOOP          510
PROMPT3             5D0
PROMPTEADDR         5F4
PROMPTSADDR         562
READHEX             474
READ_EADDR          450
READ_SADDR          40C
SGTE                4DC
SGTEM               648
START               400
STARTING_ADD        674
STORE               49C
STOREME             4AA
STORE_ENDING        4C2
VALIDATE_STORE      468
WECOMEM             400
