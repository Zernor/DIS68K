00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/2/2016 12:05:14 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  68K Disassembler
00000000                             3  * Written by :  Hoa, Tenzin Khando, Marco F.
00000000                             4  * Date       :
00000000                             5  * Description:  Awesome 68k disassembler 
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR        EQU       $0D
00000000  =0000000A                  8  LF        EQU       $0A
00000000                             9  
00000400                            10      ORG    $400
00000400                            11  START:  
00000400                            12                 
00000400  43F9 00000514             13  WECOMEM     LEA         GREETING, A1    *load the greeting message
00000406  103C 000E                 14              MOVE.B      #14,D0
0000040A  4E4F                      15              TRAP        #15 
0000040C                            16              
0000040C                            17  * Put program code here
0000040C                            18  READ_SADDR
0000040C  43F9 00000546             19          LEA         PROMPTSADDR, A1
00000412  103C 000E                 20          MOVE.B      #14, D0
00000416  4E4F                      21          TRAP        #15
00000418  103C 0002                 22          MOVE.B      #2,D0              * Read string from keyboard and store at A1
0000041C  4E4F                      23          TRAP        #15
0000041E  6000 003C                 24          BRA         VALIDATE_STORE 
00000422                            25  BADSIZES
00000422  43F9 000005E2             26          LEA         ERRORINPUTSIZE, A1
00000428  103C 000E                 27          MOVE.B      #14,D0
0000042C  4E4F                      28          TRAP        #15
0000042E  B63C 0000                 29          CMP.B       #0,D3
00000432  67D8                      30          BEQ         READ_SADDR
00000434  6000 0014                 31          BRA         READ_EADDR 
00000438                            32  
00000438                            33  INVALID_CHARACTER
00000438  43F9 000005E2             34          LEA         ERRORINPUTSIZE, A1
0000043E  103C 000E                 35          MOVE.B      #14,D0 
00000442  4E4F                      36          TRAP        #15 
00000444  B63C 0000                 37          CMP.B       #0,D3
00000448  67C2                      38          BEQ         READ_SADDR 
0000044A                            39          
0000044A                            40  READ_EADDR
0000044A  43F9 000005AE             41          LEA         PROMPTEADDR, A1
00000450  103C 000E                 42          MOVE.B      #14, D0
00000454  4E4F                      43          TRAP        #15
00000456  103C 0002                 44          MOVE.B      #2,D0              * Read string from keyboard and store at A1
0000045A  4E4F                      45          TRAP        #15  
0000045C                            46          
0000045C                            47  VALIDATE_STORE 
0000045C  0C01 0004                 48          CMPI.B      #4, D1             * Check address size
00000460  6DC0                      49          BLT         BADSIZES 
00000462  0C01 0008                 50          CMPI.B      #8, D1 
00000466  6EBA                      51          BGT         BADSIZES
00000468                            52          
00000468                            53  READHEX       
00000468  0C11 0030                 54          CMPI.B      #$30,(A1)
0000046C  6DCA                      55          BLT         INVALID_CHARACTER   * Wrong data
0000046E  0C11 0040                 56          CMPI.B      #$40,(A1)
00000472  6D00 000C                 57          BLT         NUMBER              * Is number
00000476  0C11 0046                 58          CMPI.B      #$46,(A1)
0000047A  6D00 000C                 59          BLT         LETTERS             * Is Letter
0000047E  60B8                      60          BRA         INVALID_CHARACTER
00000480  0411 0030                 61  NUMBER      SUBI.B      #$30,(A1)           * Convert Numbers to Hex
00000484  6000 000A                 62          BRA         STORE   
00000488  0411 0037                 63  LETTERS     SUBI.B      #$37,(A1)           * Convert Numbers to Hex
0000048C  6000 0002                 64           BRA         STORE
00000490  DE19                      65  STORE       ADD.B       (A1)+,D7            * Save data from A1 to D7
00000492  0C11 0000                 66          CMPI.B      #0,(A1) 
00000496  6700 0006                 67          BEQ         STOREME     
0000049A  E98F                      68          LSL.L       #4,D7               * Keep reading next character
0000049C  60CA                      69          BRA         READHEX
0000049E                            70  STOREME     
0000049E  B63C 0000                 71          CMP.B       #0,D3
000004A2  6600 0010                 72          BNE         STORE_ENDING
000004A6  23C7 0000062E             73          MOVE.L      D7, STARTING_ADD      * Save in the memory address 
000004AC  163C 0001                 74          MOVE.B      #1, D3               * Counter - for VALID_STORE
000004B0  4287                      75          CLR.L       D7
000004B2  6096                      76          BRA         READ_EADDR    
000004B4                            77          
000004B4                            78  STORE_ENDING 
000004B4  BEB9 0000062E             79          CMP.L       (STARTING_ADD), D7
000004BA  6D00 0010                 80          BLT         SGTE
000004BE  23C7 00000632             81          MOVE.L      D7, ENDING_ADD
000004C4  4287                      82          CLR.L       D7
000004C6  4283                      83          CLR.L       D3
000004C8  6000 0016                 84          BRA         OPCODEDIS  
000004CC                            85          
000004CC                            86  SGTE
000004CC  43F9 000005AE             87          LEA         PROMPTEADDR, A1
000004D2  103C 000E                 88          MOVE.B      #14, D0
000004D6  4E4F                      89          TRAP        #15
000004D8  4287                      90          CLR.L       D7
000004DA  4283                      91          CLR.L       D3
000004DC  6000 FF2E                 92          BRA         READ_SADDR
000004E0                            93  
000004E0                            94  *-----------------------------Addressess------------------------------*  
000004E0                            95  
000004E0                            96           
000004E0                            97  
000004E0                            98  OPCODEDIS
000004E0  143C 0010                 99          MOVE.B  #16, D2
Line 100 ERROR: Invalid syntax
000004E4                           100          MOVE.W  #$ENDING_ADD,   D1
000004E4  103C 000F                101          MOVE.B  #15, D0
000004E8  4E4F                     102          TRAP    #15
Line 103 ERROR: Invalid syntax
000004EA                           103          MOVE.W  #$STARTING_ADD, D1
000004EA  103C 000F                104          MOVE.B  #15, D0
000004EE  4E4F                     105          TRAP    #15
000004F0  7001                     106          MOVE.L  #1, D0
000004F2  7404                     107          MOVE.L  #4, D2
000004F4                           108  OPCODELOOP 
000004F4  B400                     109          CMP.B   D0, D2
000004F6  6700 0018                110          BEQ     OPCODEDONE
000004FA  E38B                     111          LSL.L   #1, D3
000004FC  6500 000C                112          BCS     ADDONE
00000500  0604 0000                113          ADDI.B  #%0, D4                 * Add 0 bit to d2
00000504  E384                     114           ASL.L   #1, D4
00000506  5280                     115           ADDQ.L  #1,D0
00000508  60EA                     116           BRA     OPCODELOOP 
0000050A                           117  ADDONE      
0000050A  5204                     118          ADDI.B  #%1, D4                 * Add 1 bit to d2
0000050C  5280                     119          ADDQ.L  #1,D0
0000050E  60E4                     120          BRA     OPCODELOOP
00000510                           121  OPCODEDONE            
00000510                           122  
00000510  FFFF FFFF                123          SIMHALT             ; halt simulator
00000514                           124  
00000514                           125  * Put variables and constants here
00000514                           126  
00000514                           127  * Hex values -----------------------------------------------  
00000514  =00000000                128  numzero     EQU     0  
00000514  =00000001                129  numone      EQU     1
00000514  =00000002                130  numtwo      EQU     2
00000514  =00000003                131  numthree    EQU     3
00000514  =00000004                132  numfour     EQU     4
00000514  =00000005                133  numfive     EQU     5
00000514  =00000006                134  numsix      EQU     6
00000514  =00000007                135  numseven    EQU     7
00000514  =00000008                136  numeight    EQU     8
00000514  =00000009                137  numnine     EQU     9
00000514  =0000000A                138  numA        EQU     10
00000514  =0000000B                139  numB        EQU     11
00000514  =0000000C                140  numC        EQU     12
00000514  =0000000D                141  numD        EQU     13
00000514  =0000000E                142  numE        EQU     $E
00000514  =0000000F                143  numF        EQU     15
00000514                           144  
00000514                           145  * Binary Hex Values ----------------------------------------
00000514  =00000000                146  hex0        EQU     %0000   
00000514  =00000001                147  hex1        EQU     %0001   
00000514  =00000002                148  hex2        EQU     %0010   
00000514  =00000003                149  hex3        EQU     %0011   
00000514  =00000004                150  hex4        EQU     %0100   
00000514  =00000005                151  hex5        EQU     %0101   
00000514  =00000006                152  hex6        EQU     %0110   
00000514  =00000007                153  hex7        EQU     %0111   
00000514  =00000008                154  hex8        EQU     %1000   
00000514  =00000009                155  hex9        EQU     %1001   
00000514  =0000000A                156  hexA        EQU     %1010   
00000514  =0000000B                157  hexB        EQU     %1011   
00000514  =0000000C                158  hexC        EQU     %1100   
00000514  =0000000D                159  hexD        EQU     %1101   
00000514  =0000000E                160  hexE        EQU     %1110   
00000514  =0000000F                161  hexF        EQU     %1111   
00000514                           162  
00000514                           163  * OP Codes -------------------------------------------------
00000514  =00000000                164  bin0000     EQU     %0000   ;ADDI, ANDI, EORI, BCHG, CMPI
00000514  =00000001                165  bin0001     EQU     %0001   ;MOVE.B
00000514  =00000002                166  bin0010     EQU     %0010   ;MOVE.L
00000514  =00000003                167  bin0011     EQU     %0011   ;MOVE.W
00000514  =00000004                168  bin0100     EQU     %0100   ;MOVEM, MULS.L, DIVU.L, LEA, CLR, JSR, RTS
00000514  =00000005                169  bin0101     EQU     %0101   ;SUBQ
00000514  =00000006                170  bin0110     EQU     %0110   ;Bcc
00000514  =00000007                171  bin0111     EQU     %0111   ;MOVEQ
00000514  =00000008                172  bin1000     EQU     %1000   ;DIVU.W
00000514  =00000009                173  bin1001     EQU     %1001   ;SUB, SUBA
00000514  =0000000B                174  bin1011     EQU     %1011   ;CMP, CMPA, EOR
00000514  =0000000C                175  bin1100     EQU     %1100   ;AND, MULS.W
00000514  =0000000D                176  bin1101     EQU     %1101   ;ADD, ADDA
00000514  =0000000E                177  bin1110     EQU     %1110   ;ASR, ASL, ROL, ROR
00000514                           178  
00000514= 48 45 4C 4C 4F 20 ...    179  GREETING        DC.B    'HELLO THERE, WELCOME TO AWESOME DISASSEMBLER',CR,LF,CR,LF,0 
00000546= 504C 4541 5345 2...      180  PROMPTSADDR     DC.W    'PLEASE ENTER THE STARTING ADDRESS MUST BE GREATER THAN 7000: ',0,CR,LF
0000058A= 50 4C 45 41 53 45 ...    181  PROMPT3         DC.B    'PLEASE ENTER THE ENDING ADDRESS: ',CR,LF,0
000005AE= 504C 4541 5345 2...      182  PROMPTEADDR     DC.W    'PLEASE ENTER THE ENDING ADDRESS AND ALL CAPITALS: ',0
000005E2= 45 52 52 4F 52 3A ...    183  ERRORINPUTSIZE  DC.B    'ERROR: INVALID ADDRESS SIZE',CR,LF,CR,LF,0
00000602= 45 52 52 4F 52 3A ...    184  SGTEM           DC.B    'ERROR: STARTING ADDRESS > ENDING ADDRESS',CR,LF,0
0000062D                           185  
0000062E                           186  STARTING_ADD    DS.L    1
00000632                           187  ENDING_ADD      DS.L    1
00000636                           188  
00000636                           189  
00000636                           190   END    START        ; last line of source

2 errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDONE              50A
BADSIZES            422
BIN0000             0
BIN0001             1
BIN0010             2
BIN0011             3
BIN0100             4
BIN0101             5
BIN0110             6
BIN0111             7
BIN1000             8
BIN1001             9
BIN1011             B
BIN1100             C
BIN1101             D
BIN1110             E
CR                  D
ENDING_ADD          632
ERRORINPUTSIZE      5E2
GREETING            514
HEX0                0
HEX1                1
HEX2                2
HEX3                3
HEX4                4
HEX5                5
HEX6                6
HEX7                7
HEX8                8
HEX9                9
HEXA                A
HEXB                B
HEXC                C
HEXD                D
HEXE                E
HEXF                F
INVALID_CHARACTER   438
LETTERS             488
LF                  A
NUMA                A
NUMB                B
NUMBER              480
NUMC                C
NUMD                D
NUME                E
NUMEIGHT            8
NUMF                F
NUMFIVE             5
NUMFOUR             4
NUMNINE             9
NUMONE              1
NUMSEVEN            7
NUMSIX              6
NUMTHREE            3
NUMTWO              2
NUMZERO             0
OPCODEDIS           4E0
OPCODEDONE          510
OPCODELOOP          4F4
PROMPT3             58A
PROMPTEADDR         5AE
PROMPTSADDR         546
READHEX             468
READ_EADDR          44A
READ_SADDR          40C
SGTE                4CC
SGTEM               602
START               400
STARTING_ADD        62E
STORE               490
STOREME             49E
STORE_ENDING        4B4
VALIDATE_STORE      45C
WECOMEM             400
